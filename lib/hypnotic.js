/*** Generated by streamline 0.10.1 (callbacks) - DO NOT EDIT ***/ var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename, false),__func=__rt.__func,__cb=__rt.__cb,__catch=__rt.__catch,__tryCatch=__rt.__tryCatch; (function(exports) {








































































  var asyncFunctions = { };

  function sleep(cb, ms) {
    setTimeout(cb, ms); };

  asyncFunctions[sleep] = true;




  function asyncCall(func, obj, args, callback) {
    var new_args = [];
    new_args.push(callback);
    for (var i = 0, l = args.length; (i < l); ++i) { new_args.push(args[i]);; };

    func.apply(obj, new_args); };

  function asyncCallbackDummy() {  };

  var parser = Narcissus.parser;
  var definitions = Narcissus.definitions;
  var hostGlobal = Narcissus.hostGlobal;


  eval(definitions.consts);

  const GLOBAL_CODE = 0, EVAL_CODE = 1, FUNCTION_CODE = 2;

  function ExecutionContext(type) {
    this.type = type; };


  function isStackOverflow(e) {
    var re = /InternalError: (script stack space quota is exhausted|too much recursion)/;
    return re.test(e.toString()); };



  var globalBase = {

    NaN: NaN, Infinity: Infinity, undefined: undefined,


    eval: function eval(s) {
      if ((typeof s !== "string")) {
        return s };

      var x = ExecutionContext.current;
      var x2 = new ExecutionContext(EVAL_CODE);
      x2.thisObject = x.thisObject;
      x2.caller = x.caller;
      x2.callee = x.callee;
      x2.scope = x.scope;
      try {
        console.log("TODO:eval()!!!");
        x2.execute(parser.parse(s));
        return x2.result;
      } catch (e) {
        if (((e instanceof SyntaxError) || isStackOverflow(e))) {






          console.log("internal error:", e);
          x.result = e;
          throw THROW; }
         else {
          throw e; } ; }; },






    Function: function Function(dummy) {
      var p = "", b = "", n = arguments.length;
      if (n) {
        var m = (n - 1);
        if (m) {
          p += arguments[0];
          for (var k = 1; (k < m); k++) { p += ("," + arguments[k]);; }; } ;


        b += arguments[m]; } ;




      var t = new parser.Tokenizer((((("anonymous(" + p) + ") {") + b) + "}"));



      var f = parser.FunctionDefinition(t, null, false, parser.STATEMENT_FORM);
      var s = { object: global, parent: null };
      return newFunction(f, { scope: s }); },

    Array: function(dummy) {

      return Array.apply(this, arguments); },

    String: function String(s) {

      s = (arguments.length ? ("" + s) : "");
      if ((this instanceof String)) {


        this.value = s;
        return this; } ;

      return s; },



    RegExp: RegExp,


    load: function load(s) {
      if ((typeof s !== "string")) {
        return s };

      console.log("TODO:load()!!!");
      evaluate(snarf(s), s, 1); },

    version: function() { return Narcissus.options.version; },
    quit: function() { throw END; } };


  var narcissusGlobal = { };
  function resetEnvironment() {
    ExecutionContext.current = new ExecutionContext(GLOBAL_CODE);
    for (var key in narcissusGlobal) {
      delete narcissusGlobal[key]; };

    for (var key in globalBase) {
      narcissusGlobal[key] = globalBase[key]; }; };


  resetEnvironment();


  var globalHandler = definitions.makePassthruHandler(narcissusGlobal);

  globalHandler.has = function(name) {
    if ((name in narcissusGlobal)) {
      return true };

    if ((name === "Narcissus")) {
      return false };
    if ((name in hostGlobal)) {
      return true };
    return Narcissus.definitions.noPropFound(name); };


  globalHandler.get = function(receiver, name) {
    if (narcissusGlobal.hasOwnProperty(name)) {
      return narcissusGlobal[name] };

    var globalProp = hostGlobal[name];
    if (definitions.isNativeCode(globalProp)) {

      return Proxy.createFunction(definitions.makePassthruHandler(globalProp), function() {

        return globalProp.apply(hostGlobal, arguments);
      }, function() {
        var a = arguments;
        switch (a.length) {
        case 0: return new globalProp();
        case 1:
          return new globalProp(a[0]);
        case 2:
          return new globalProp(a[0], a[1]);
        case 3:
          return new globalProp(a[0], a[1], a[2]);
          default:
          var argStr = "";
          for (var i = 0; (i < a.length); i++) {
            argStr += (("a[" + i) + "],");; }; return eval((((("new " + name) + "(") + argStr.slice(0, -1)) + ");"));

        }; }); } ;




    return (globalProp ? globalProp : Narcissus.definitions.noPropFound(name)); };


  var global = Proxy.create(globalHandler);


  function hasDirectProperty(o, p) {
    return Object.prototype.hasOwnProperty.call(o, p); };



  function reflectClass(name, proto) {
    var gctor = global[name];
    definitions.defineProperty(gctor, "prototype", proto, true, true, true);
    definitions.defineProperty(proto, "constructor", gctor, false, false, true);
    return proto; };



  reflectClass("Array", new Array);


  var gSp = reflectClass("String", new String);
  gSp.toSource = function() { return this.value.toSource(); };
  gSp.toString = function() { return this.value; };
  gSp.valueOf = function() { return this.value; };
  global.String.fromCharCode = String.fromCharCode;

  ExecutionContext.current = null;

  ExecutionContext.prototype = {
    caller: null,
    callee: null,
    scope: { object: global, parent: null },
    thisObject: global,
    result: undefined,
    target: null,
    ecma3OnlyMode: false,


    execute: function execute__1(n, _) { var prev, __this = this; var __frame = { name: "execute__1", line: 299 }; return __func(_, this, arguments, execute__1, 1, __frame, function __$execute__1() {
        prev = ExecutionContext.current;
        ExecutionContext.current = __this; return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute__1() { return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute__1() {

                    return execute(n, __this, __cb(_, __frame, 4, 16, __then, true)); }); })(function ___(e, __result) { __catch(function __$execute__1() { if (e) {

                      if ((e === THROW)) {

                        if (prev) {
                          prev.result = __this.result;
                          return _(THROW); } ;


                        return _(__this.result); }
                       else {
                        return _(e); } ; __then(); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, function __$execute__1() { _(null, null, true); }); }); }); })(function ___(__e, __r, __cont) { (function ___(__then) { __tryCatch(_, function __$execute__1() {


                ExecutionContext.current = prev; __then(); }); })(function ___() { __tryCatch(_, function ___() { if (__cont) { __then(); } else { _(__e, __r); }; }); }); }); })(function ___() { __tryCatch(_, _); }); }); } };




  function Reference(base, propertyName, node) {
    this.base = base;
    this.propertyName = propertyName;
    this.node = node; };


  Reference.prototype.toString = function() { return this.node.getSource(); };

  function getValue(v) {
    if ((v instanceof Reference)) {
      if (!v.base) {
        throw new ReferenceError((v.propertyName + " is not defined"), v.node.filename, v.node.lineno); } ;


      return v.base[v.propertyName]; } ;

    return v; };


  function putValue(v, w, vn) {
    if ((v instanceof Reference)) {
      return ((v.base || global))[v.propertyName] = w };
    throw new ReferenceError("Invalid assignment left-hand side", vn.filename, vn.lineno); };



  function isPrimitive(v) {
    var t = typeof v;
    return (((t === "object")) ? (v === null) : (t !== "function")); };


  function isObject(v) {
    var t = typeof v;
    return (((t === "object")) ? (v !== null) : (t === "function")); };




  function toObject(v, r, rn) {
    switch (typeof v) {
    case "boolean": return new global.Boolean(v);
    case "number":
      return new global.Number(v);
    case "string":
      return new global.String(v);
    case "function":
      return v;
    case "object":
      if ((v !== null)) {
        return v
      }; };

    var message = (((r + " (type ") + (typeof v)) + ") has no properties");
    throw (rn ? new TypeError(message, rn.filename, rn.lineno) : new TypeError(message)); };



  function execute(n, x, _) { var a, c, f, i, j, r, s, t, u, v, matchDefault, break_loop, c2; var __frame = { name: "execute", line: 379 }; return __func(_, this, arguments, execute, 2, __frame, function __$execute() { return (function __$execute(__break) {


        switch (n.type) {
        case FUNCTION: return (function __$execute(__then) { if ((n.functionForm !== parser.DECLARED_FORM)) {
              return (function __$execute(__then) { if ((!n.name || (n.functionForm === parser.STATEMENT_FORM))) {
                  v = newFunction(n, x);
                  if ((n.functionForm === parser.STATEMENT_FORM)) {
                    definitions.defineProperty(x.scope.object, n.name, v, true);
                  } ; __then(); } else { t = new Object;

                  x.scope = {
                    object: t, parent: x.scope }; return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute() { v = newFunction(n, x);

                        definitions.defineProperty(t, n.name, v, true, true);
                        _(null, null, true); }); })(function ___(__e, __r, __cont) { (function ___(__then) { __tryCatch(_, function __$execute() { x.scope = x.scope.parent;

                          __then(); }); })(function ___() { __tryCatch(_, function ___() { if (__cont) { __then(); } else { _(__e, __r); }; }); }); }); })(function ___() { __tryCatch(_, __then); }); } ; })(__then); } else { __then(); } ; })(__break);





        case SCRIPT: t = x.scope.object;
          a = n.funDecls;
          for (i = 0, j = a.length; (i < j); i++) {
            s = a[i].name;
            f = newFunction(a[i], x);
            definitions.defineProperty(t, s, f, (x.type !== EVAL_CODE));
          }; a = n.varDecls;

          for (i = 0, j = a.length; (i < j); i++) {
            u = a[i];
            s = u.name;
            if ((u.readOnly && hasDirectProperty(t, s))) {
              return _(new TypeError(("Redeclaration of const " + s), u.filename, u.lineno));
            } ; if ((u.readOnly || !hasDirectProperty(t, s))) {


              definitions.defineProperty(t, s, undefined, (x.type !== EVAL_CODE), false);

            } ; }; c = n.children;


          i = 0;
          j = c.length; var __91 = false; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; if (__91) { i++; } else { __91 = true; } ; var __90 = (i < j); if (__90) { return execute(c[i], x, __cb(_, __frame, 46, 16, function __$execute() {
                  while (__more) { __loop(); }; __more = true; }, true)); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(__break);


        case BLOCK: c = n.children;
          i = 0;
          j = c.length; var __94 = false; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; if (__94) { i++; } else { __94 = true; } ; var __93 = (i < j); if (__93) { return execute(c[i], x, __cb(_, __frame, 52, 16, function __$execute() {
                  while (__more) { __loop(); }; __more = true; }, true)); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(__break);


        case IF: return execute(n.condition, x, __cb(_, __frame, 56, 25, function ___(__0, __11) {
            var __10 = getValue(__11); return (function __$execute(__then) { if (__10) { return execute(n.thenPart, x, __cb(_, __frame, 57, 16, __then, true));
              } else { return (function __$execute(__then) { if (n.elsePart) {
                    return execute(n.elsePart, x, __cb(_, __frame, 59, 16, __then, true));
                  } else { __then(); } ; })(__then); } ; })(__break); }, true));


        case SWITCH: return execute(n.discriminant, x, __cb(_, __frame, 63, 25, function ___(__0, __12) {
            s = getValue(__12); a = n.cases;
            matchDefault = false;
            break_loop = false;
            i = 0;
            j = a.length; var __101 = false; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; if (__101) { i++; } else { __101 = true; } ; var __100 = 1; if (__100) { if ((i === j)) {
                    if ((n.defaultIndex >= 0)) {
                      i = (n.defaultIndex - 1);
                      matchDefault = true;
                      while (__more) { __loop(); }; __more = true; return; } ; return __break(); } ; t = a[i];




                  return (function __$execute(__then) { if ((t.type === CASE)) {
                      return execute(t.caseLabel, x, __cb(_, __frame, 78, 33, function ___(__0, __13) {
                        u = getValue(__13); __then(); }, true)); } else { if (!matchDefault) {

                        while (__more) { __loop(); }; __more = true; return; } ; u = s;

                      __then(); } ; })(function __$execute() { return (function __$execute(__then) { if ((u === s)) {

                        return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; var __103 = 1; if (__103) { return (function __$execute(__then) { if (t.statements.children.length) {

                                  return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute() { return execute(t.statements, x, __cb(_, __frame, 88, 32, __then, true));

                                      }); })(function ___(e, __result) { __catch(function __$execute() { if (e) { if (((e === BREAK) && (x.target === n))) {

                                            break_loop = true;
                                            return __break(); } else {

                                            return _(e);
                                          } ; __then(); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, __then); }); } else { __then(); } ; })(function __$execute() { if ((++i === j)) {



                                  break_loop = true;
                                  return __break(); } ; t = a[i];


                                while (__more) { __loop(); }; __more = true; }); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(function __$execute() { if (break_loop) {

                            return __break(); } ; __then(); }); } else { __then(); } ; })(function __$execute() { while (__more) { __loop(); }; __more = true; }); }); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(__break); }, true));





        case FOR: return (function __$execute(_) { var __1 = n.setup;
            if (!__1) { return _(null, __1); } ; return execute(n.setup, x, __cb(_, __frame, 111, 32, function ___(__0, __3) { var __2 = getValue(__3); return _(null, __2); }, true)); })(__cb(_, __frame, -378, 21, function __$execute() { return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; return (function __$execute(_) { return (function __$execute(_) { var __2 = !n.condition;
                    if (__2) { return _(null, __2); } ; return execute(n.condition, x, __cb(_, __frame, 112, 44, function ___(__0, __4) { var __3 = getValue(__4); return _(null, __3); }, true)); })(__cb(_, __frame, -378, 21, _, true)); })(__cb(_, __frame, -378, 21, function ___(__0, __106) { if (__106) { return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute() { return execute(n.body, x, __cb(_, __frame, 114, 20, __then, true));

                        }); })(function ___(e, __result) { __catch(function __$execute() { if (e) { if (((e === BREAK) && (x.target === n))) {

                              return __break(); } else { if (((e === CONTINUE) && (x.target === n))) {

                               } else {

                                return _(e);
                              } ; } ; __then(); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, function __$execute() { return (function __$execute(_) { var __2 = n.update;


                          if (!__2) { return _(null, __2); } ; return execute(n.update, x, __cb(_, __frame, 124, 37, function ___(__0, __4) { var __3 = getValue(__4); return _(null, __3); }, true)); })(__cb(_, __frame, -378, 21, function __$execute() { while (__more) { __loop(); }; __more = true; }, true)); }); }); } else { __break(); } ; }, true)); }); do { __loop(); } while (__more); __more = true; })(__break); }, true));


        case WHILE: return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; return (function __$execute(_) { return (function __$execute(_) { var __3 = !n.condition;
                  if (__3) { return _(null, __3); } ; return execute(n.condition, x, __cb(_, __frame, 128, 44, function ___(__0, __5) { var __4 = getValue(__5); return _(null, __4); }, true)); })(__cb(_, __frame, -378, 21, _, true)); })(__cb(_, __frame, -378, 21, function ___(__0, __110) { if (__110) { return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute() { return execute(n.body, x, __cb(_, __frame, 130, 20, __then, true));

                      }); })(function ___(e, __result) { __catch(function __$execute() { if (e) { if (((e === BREAK) && (x.target === n))) {

                            return __break(); } else { if (((e === CONTINUE) && (x.target === n))) {

                             } else {

                              return _(e);
                            } ; } ; __then(); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, function __$execute() { return (function __$execute(_) { var __3 = n.update;


                        if (!__3) { return _(null, __3); } ; return execute(n.update, x, __cb(_, __frame, 140, 37, function ___(__0, __5) { var __4 = getValue(__5); return _(null, __4); }, true)); })(__cb(_, __frame, -378, 21, function __$execute() { while (__more) { __loop(); }; __more = true; }, true)); }); }); } else { __break(); } ; }, true)); }); do { __loop(); } while (__more); __more = true; })(__break);



        case FOR_IN: u = n.varDecl;
          return (function __$execute(__then) { if (u) {
              return execute(u, x, __cb(_, __frame, 147, 16, __then, true));
            } else { __then(); } ; })(function __$execute() { r = n.iterator;
            return execute(n.object, x, __cb(_, __frame, 149, 16, function ___(__0, __14) {
              s = __14; v = getValue(s);
              t = ((((((v === null) || (v === undefined))) && !x.ecma3OnlyMode)) ? v : toObject(v, s, n.object));


              a = [];


              for (i in t) {
                a.push(i);
              }; i = 0;
              j = a.length; var __117 = false; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; if (__117) { i++; } else { __117 = true; } ; var __116 = (i < j); if (__116) { return execute(r, x, __cb(_, __frame, 160, 25, function ___(__0, __15) {
                      putValue(__15, a[i], r); return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute() { return execute(n.body, x, __cb(_, __frame, 162, 20, __then, true));

                          }); })(function ___(e, __result) { __catch(function __$execute() { if (e) { if (((e === BREAK) && (x.target === n))) {

                                return __break(); } else { if (((e === CONTINUE) && (x.target === n))) {

                                  while (__more) { __loop(); }; __more = true; return; } else {

                                  return _(e);
                                } ; } ; __then(); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, function __$execute() { while (__more) { __loop(); }; __more = true; }); }); }, true)); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(__break); }, true)); });





        case DO: var __4 = true; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; return (function __$execute(_) { return execute(n.condition, x, __cb(_, __frame, 188, 30, function ___(__0, __6) {












                  var __5 = (__4 || getValue(__6)); return _(null, __5); }, true)); })(__cb(_, __frame, -378, 21, function ___(__0, __120) { if (__120) { __4 = false; return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute() { return execute(n.body, x, __cb(_, __frame, 178, 20, __then, true)); }); })(function ___(e, __result) { __catch(function __$execute() { if (e) { if (((e === BREAK) && (x.target === n))) { return __break(); } else { if (((e === CONTINUE) && (x.target === n))) { while (__more) { __loop(); }; __more = true; return; } else { return _(e); } ; } ; __then(); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, function __$execute() { while (__more) { __loop(); }; __more = true; }); }); } else { __break(); } ; }, true)); }); do { __loop(); } while (__more); __more = true; })(__break);


        case BREAK: 
        case CONTINUE: x.target = n.target;
          return _(n.type);
        case TRY:

          return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute() { return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute() { return execute(n.tryBlock, x, __cb(_, __frame, 198, 16, __then, true));

                    }); })(function ___(e, __result) { __catch(function __$execute() { if (e) { return (function __$execute(__then) { if (((e === THROW) && (j = n.catchClauses.length))) {

                            e = x.result;
                            x.result = undefined;
                            i = 0;
                            var __125 = false; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; if (__125) { i++; } else { __125 = true; } ; var __124 = 1; if (__124) { if ((i === j)) {
                                    x.result = e;
                                    return _(THROW);
                                  } ; t = n.catchClauses[i];

                                  x.scope = {
                                    object: { }, parent: x.scope }; definitions.defineProperty(x.scope.object, t.varName, e, true);
                                  return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute() { return (function __$execute(_) { var __5 = t.guard;

                                          if (!__5) { return _(null, __5); } ; return execute(t.guard, x, __cb(_, __frame, 212, 53, function ___(__0, __7) { var __6 = !getValue(__7); return _(null, __6); }, true)); })(__cb(_, __frame, -378, 21, function ___(__0, __16) { return (function __$execute(__then) { if (__16) { while (__more) { __loop(); }; __more = true; return; } else { __then(); } ; })(function __$execute() { return execute(t.block, x, __cb(_, __frame, 214, 28, __break, true));

                                          }); }, true)); }); })(function ___(__e, __r, __cont) { (function ___(__then) { __tryCatch(_, function __$execute() { x.scope = x.scope.parent;


                                          __then(); }); })(function ___() { __tryCatch(_, function ___() { if (__cont) { __then(); } else { _(__e, __r); }; }); }); }); })(function ___() { __tryCatch(_, function __$execute() { while (__more) { __loop(); }; __more = true; }); }); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(__then); } else { return _(e);



                          } ; })(__then); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, function __$execute() { _(null, null, true); }); }); }); })(function ___(__e, __r, __cont) { (function ___(__then) { __tryCatch(_, function __$execute() { return (function __$execute(__then) { if (n.finallyBlock) {


                      return execute(n.finallyBlock, x, __cb(_, __frame, 225, 20, __then, true));
                    } else { __then(); } ; })(__then); }); })(function ___() { __tryCatch(_, function ___() { if (__cont) { __then(); } else { _(__e, __r); }; }); }); }); })(function ___() { __tryCatch(_, __break); });



        case THROW: return execute(n.exception, x, __cb(_, __frame, 230, 32, function ___(__0, __17) {
            x.result = getValue(__17); return _(THROW);
          }, true));

        case RETURN: return (function __$execute(_) { var __6 = n.value;

            return (function __$execute(__then) { if (__6) { return execute(n.value, x, __cb(_, __frame, 235, 42, function ___(__0, __8) { var __7 = getValue(__8); return _(null, __7); }, true)); } else { __then(); } ; })(function __$execute() { return _(null, undefined); }); })(__cb(_, __frame, -378, 21, function ___(__0, __18) { x.result = __18; return _(RETURN);
          }, true));

        case WITH: return execute(n.object, x, __cb(_, __frame, 239, 16, function ___(__0, __19) {
            r = __19; t = toObject(getValue(r), r, n.object);
            x.scope = {
              object: t, parent: x.scope }; return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute() { return execute(n.body, x, __cb(_, __frame, 243, 16, function __$execute() {

                    _(null, null, true); }, true)); }); })(function ___(__e, __r, __cont) { (function ___(__then) { __tryCatch(_, function __$execute() { x.scope = x.scope.parent;

                    __then(); }); })(function ___() { __tryCatch(_, function ___() { if (__cont) { __then(); } else { _(__e, __r); }; }); }); }); })(function ___() { __tryCatch(_, __break); }); }, true));



        case VAR: 
        case CONST: c = n.children;
          i = 0;
          j = c.length; var __134 = false; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; if (__134) { i++; } else { __134 = true; } ; var __133 = (i < j); if (__133) { u = c[i].initializer;
                if (!u) {
                  while (__more) { __loop(); }; __more = true; return; } ; t = c[i].name;

                for (s = x.scope; s; s = s.parent) {
                  if (hasDirectProperty(s.object, t)) {
                    break;
                  } ; }; return execute(u, x, __cb(_, __frame, 261, 29, function ___(__0, __20) {

                  u = getValue(__20); if ((n.type === CONST)) {
                    definitions.defineProperty(s.object, t, u, (x.type !== EVAL_CODE), true);
                  } else { s.object[t] = u;

                  } ; while (__more) { __loop(); }; __more = true; }, true)); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(__break);



        case DEBUGGER: return _(("NYI: " + definitions.tokens[n.type]));
        case SEMICOLON:

          return (function __$execute(__then) { if (n.expression) {
              return execute(n.expression, x, __cb(_, __frame, 274, 36, function ___(__0, __21) {
                x.result = getValue(__21); __then(); }, true)); } else { __then(); } ; })(__break);


        case LABEL: return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute() { return execute(n.statement, x, __cb(_, __frame, 279, 16, __then, true));

              }); })(function ___(e, __result) { __catch(function __$execute() { if (e) { if (((e === BREAK) && (x.target === n.target))) {

                   } else {
                    return _(e);
                  } ; __then(); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, __break); });




        case COMMA: c = n.children;
          i = 0;
          j = c.length; var __139 = false; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; if (__139) { i++; } else { __139 = true; } ; var __138 = (i < j); if (__138) { return execute(c[i], x, __cb(_, __frame, 291, 29, function ___(__0, __22) {
                  v = getValue(__22); while (__more) { __loop(); }; __more = true; }, true)); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(__break);


        case ASSIGN: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 296, 16, function ___(__0, __23) {
            r = __23; t = n.assignOp;
            if (t) {
              u = getValue(r);
            } ; return execute(c[1], x, __cb(_, __frame, 300, 25, function ___(__0, __24) {
              v = getValue(__24); if (t) {
                switch (t) {
                case BITWISE_OR:
                  v = (u | v); break; case BITWISE_XOR: v = (u ^ v);
                  break; case BITWISE_AND: v = (u & v);
                  break; case LSH: v = (u << v);
                  break; case RSH: v = (u >> v);
                  break; case URSH: v = (u >>> v);
                  break; case PLUS: v = (u + v);
                  break; case MINUS: v = (u - v);
                  break; case MUL: v = (u * v);
                  break; case DIV: v = (u / v);
                  break; case MOD: v = (u % v);
                  break; }; } ; putValue(r, v, c[0]);


              return __break(); }, true)); }, true));


        case HOOK: c = n.children;
          return (function __$execute(_) { return execute(c[0], x, __cb(_, __frame, 321, 25, function ___(__0, __8) {
              var __7 = getValue(__8); var __9 = __7; return (function __$execute(__then) { if (__9) { return execute(c[1], x, __cb(_, __frame, 321, 57, function ___(__0, __11) { var __10 = getValue(__11); return _(null, __10); }, true)); } else { __then(); } ; })(function __$execute() { return execute(c[2], x, __cb(_, __frame, 322, 54, function ___(__0, __13) {
                  var __12 = getValue(__13); return _(null, __12); }, true)); }); }, true)); })(__cb(_, __frame, -378, 21, function ___(__0, __25) { v = __25; return __break(); }, true));


        case OR: c = n.children;
          return (function __$execute(_) { return execute(c[0], x, __cb(_, __frame, 327, 25, function ___(__0, __9) {
              var __8 = getValue(__9); var __10 = __8; return (function __$execute(__then) { if (__10) { var __11 = __8; return _(null, __11); } else { __then(); } ; })(function __$execute() { return execute(c[1], x, __cb(_, __frame, 327, 58, function ___(__0, __13) { var __12 = getValue(__13); return _(null, __12); }, true)); }); }, true)); })(__cb(_, __frame, -378, 21, function ___(__0, __26) { v = __26; return __break(); }, true));


        case AND: c = n.children;
          return (function __$execute(_) { return execute(c[0], x, __cb(_, __frame, 332, 25, function ___(__0, __10) {
              var __9 = getValue(__10); var __11 = !__9; return (function __$execute(__then) { if (__11) { var __12 = __9; return _(null, __12); } else { __then(); } ; })(function __$execute() { return execute(c[1], x, __cb(_, __frame, 332, 58, function ___(__0, __14) { var __13 = getValue(__14); return _(null, __13); }, true)); }); }, true)); })(__cb(_, __frame, -378, 21, function ___(__0, __27) { v = __27; return __break(); }, true));


        case BITWISE_OR: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 337, 25, function ___(__0, __28) {
            return execute(c[1], x, __cb(_, __frame, 337, 57, function ___(__0, __29) { v = (getValue(__28) | getValue(__29)); return __break(); }, true)); }, true));


        case BITWISE_XOR: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 342, 25, function ___(__0, __30) {
            return execute(c[1], x, __cb(_, __frame, 342, 57, function ___(__0, __31) { v = (getValue(__30) ^ getValue(__31)); return __break(); }, true)); }, true));


        case BITWISE_AND: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 347, 25, function ___(__0, __32) {
            return execute(c[1], x, __cb(_, __frame, 347, 57, function ___(__0, __33) { v = (getValue(__32) & getValue(__33)); return __break(); }, true)); }, true));


        case EQ: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 352, 25, function ___(__0, __34) {
            return execute(c[1], x, __cb(_, __frame, 352, 58, function ___(__0, __35) { v = (getValue(__34) == getValue(__35)); return __break(); }, true)); }, true));


        case NE: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 357, 25, function ___(__0, __36) {
            return execute(c[1], x, __cb(_, __frame, 357, 58, function ___(__0, __37) { v = (getValue(__36) != getValue(__37)); return __break(); }, true)); }, true));


        case STRICT_EQ: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 362, 25, function ___(__0, __38) {
            return execute(c[1], x, __cb(_, __frame, 362, 59, function ___(__0, __39) { v = (getValue(__38) === getValue(__39)); return __break(); }, true)); }, true));


        case STRICT_NE: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 367, 25, function ___(__0, __40) {
            return execute(c[1], x, __cb(_, __frame, 367, 59, function ___(__0, __41) { v = (getValue(__40) !== getValue(__41)); return __break(); }, true)); }, true));


        case LT: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 372, 25, function ___(__0, __42) {
            return execute(c[1], x, __cb(_, __frame, 372, 57, function ___(__0, __43) { v = (getValue(__42) < getValue(__43)); return __break(); }, true)); }, true));


        case LE: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 377, 25, function ___(__0, __44) {
            return execute(c[1], x, __cb(_, __frame, 377, 58, function ___(__0, __45) { v = (getValue(__44) <= getValue(__45)); return __break(); }, true)); }, true));


        case GE: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 382, 25, function ___(__0, __46) {
            return execute(c[1], x, __cb(_, __frame, 382, 58, function ___(__0, __47) { v = (getValue(__46) >= getValue(__47)); return __break(); }, true)); }, true));


        case GT: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 387, 25, function ___(__0, __48) {
            return execute(c[1], x, __cb(_, __frame, 387, 57, function ___(__0, __49) { v = (getValue(__48) > getValue(__49)); return __break(); }, true)); }, true));


        case IN: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 392, 25, function ___(__0, __50) {
            return execute(c[1], x, __cb(_, __frame, 392, 58, function ___(__0, __51) { v = (getValue(__50) in getValue(__51)); return __break(); }, true)); }, true));


        case INSTANCEOF: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 397, 25, function ___(__0, __52) {
            t = getValue(__52); return execute(c[1], x, __cb(_, __frame, 398, 25, function ___(__0, __53) {
              u = getValue(__53); if ((isObject(u) && (typeof u.__hasInstance__ === "function"))) {
                v = u.__hasInstance__(t);
              } else { v = (t instanceof u);

              } ; return __break(); }, true)); }, true));


        case LSH: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 407, 25, function ___(__0, __54) {
            return execute(c[1], x, __cb(_, __frame, 407, 58, function ___(__0, __55) { v = (getValue(__54) << getValue(__55)); return __break(); }, true)); }, true));


        case RSH: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 412, 25, function ___(__0, __56) {
            return execute(c[1], x, __cb(_, __frame, 412, 58, function ___(__0, __57) { v = (getValue(__56) >> getValue(__57)); return __break(); }, true)); }, true));


        case URSH: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 417, 25, function ___(__0, __58) {
            return execute(c[1], x, __cb(_, __frame, 417, 59, function ___(__0, __59) { v = (getValue(__58) >>> getValue(__59)); return __break(); }, true)); }, true));


        case PLUS: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 422, 25, function ___(__0, __60) {
            return execute(c[1], x, __cb(_, __frame, 422, 57, function ___(__0, __61) { v = (getValue(__60) + getValue(__61)); return __break(); }, true)); }, true));


        case MINUS: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 427, 25, function ___(__0, __62) {
            return execute(c[1], x, __cb(_, __frame, 427, 57, function ___(__0, __63) { v = (getValue(__62) - getValue(__63)); return __break(); }, true)); }, true));


        case MUL: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 432, 25, function ___(__0, __64) {
            return execute(c[1], x, __cb(_, __frame, 432, 57, function ___(__0, __65) { v = (getValue(__64) * getValue(__65)); return __break(); }, true)); }, true));


        case DIV: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 437, 25, function ___(__0, __66) {
            return execute(c[1], x, __cb(_, __frame, 437, 57, function ___(__0, __67) { v = (getValue(__66) / getValue(__67)); return __break(); }, true)); }, true));


        case MOD: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 442, 25, function ___(__0, __68) {
            return execute(c[1], x, __cb(_, __frame, 442, 57, function ___(__0, __69) { v = (getValue(__68) % getValue(__69)); return __break(); }, true)); }, true));


        case DELETE: return execute(n.children[0], x, __cb(_, __frame, 446, 16, function ___(__0, __70) {
            t = __70; v = (!((t instanceof Reference)) || delete t.base[t.propertyName]);
            return __break(); }, true));


        case VOID: return execute(n.children[0], x, __cb(_, __frame, 451, 21, function ___(__0, __71) {
            getValue(__71); return __break(); }, true));


        case TYPEOF: return execute(n.children[0], x, __cb(_, __frame, 455, 16, function ___(__0, __72) {
            t = __72; if ((t instanceof Reference)) {
              t = (t.base ? t.base[t.propertyName] : undefined);
            } ; v = typeof t;
            return __break(); }, true));


        case NOT: return execute(n.children[0], x, __cb(_, __frame, 462, 26, function ___(__0, __73) {
            v = !getValue(__73); return __break(); }, true));


        case BITWISE_NOT: return execute(n.children[0], x, __cb(_, __frame, 466, 26, function ___(__0, __74) {
            v = ~getValue(__74); return __break(); }, true));


        case UNARY_PLUS: return execute(n.children[0], x, __cb(_, __frame, 470, 26, function ___(__0, __75) {
            v = +getValue(__75); return __break(); }, true));


        case UNARY_MINUS: return execute(n.children[0], x, __cb(_, __frame, 474, 26, function ___(__0, __76) {
            v = -getValue(__76); return __break(); }, true));


        case INCREMENT: 
        case DECREMENT: return execute(n.children[0], x, __cb(_, __frame, 479, 16, function ___(__0, __77) {
            t = __77; u = Number(getValue(t));
            if (n.postfix) {
              v = u;
            } ; putValue(t, (((n.type === INCREMENT)) ? ++u : --u), n.children[0]);
            if (!n.postfix) {
              v = u;
            } ; return __break(); }, true));


        case DOT: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 490, 16, function ___(__0, __78) {
            r = __78; t = getValue(r);
            u = c[1].value;
            v = new Reference(toObject(t, r, c[0]), u, n);
            return __break(); }, true));


        case INDEX: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 498, 16, function ___(__0, __79) {
            r = __79; t = getValue(r);
            return execute(c[1], x, __cb(_, __frame, 500, 25, function ___(__0, __80) {
              u = getValue(__80); v = new Reference(toObject(t, r, c[0]), String(u), n);
              return __break(); }, true)); }, true));


        case LIST: v = {

          }; c = n.children;
          i = 0;
          j = c.length; var __200 = false; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; if (__200) { i++; } else { __200 = true; } ; var __199 = (i < j); if (__199) { return execute(c[i], x, __cb(_, __frame, 509, 29, function ___(__0, __81) {
                  u = getValue(__81); definitions.defineProperty(v, i, u, false, false, true);
                  while (__more) { __loop(); }; __more = true; }, true)); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(function __$execute() { definitions.defineProperty(v, "length", i, false, false, true);

            return __break(); });


        case CALL: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 517, 16, function ___(__0, __82) {
            r = __82; return execute(c[1], x, __cb(_, __frame, 518, 16, function ___(__0, __83) {
              a = __83; f = getValue(r);
              if ((isPrimitive(f) || (typeof f.__call__ !== "function"))) {
                return _(new TypeError((r + " is not callable"), c[0].filename, c[0].lineno));
              } ; t = (((r instanceof Reference)) ? r.base : null);

              if ((t instanceof Activation)) {
                t = null;
              } ; return (function __$execute(__then) { if ((f in asyncFunctions)) {


                  return asyncCall(f, t, a, __cb(_, __frame, 529, 16, function __$execute() {
                    v = undefined;
                    __then(); }, true)); } else { return f.__call__(t, a, x, __cb(_, __frame, 533, 20, function ___(__0, __84) {


                    v = __84; __then(); }, true)); } ; })(__break); }, true)); }, true));


        case NEW: 
        case NEW_WITH_ARGS: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 539, 16, function ___(__0, __85) {
            r = __85; f = getValue(r);
            return (function __$execute(__then) { if ((n.type === NEW)) {
                a = {
                }; definitions.defineProperty(a, "length", 0, false, false, true);
                __then(); } else { return execute(c[1], x, __cb(_, __frame, 545, 20, function ___(__0, __86) {

                  a = __86; __then(); }, true)); } ; })(function __$execute() { if ((isPrimitive(f) || (typeof f.__construct__ !== "function"))) {

                return _(new TypeError((r + " is not a constructor"), c[0].filename, c[0].lineno));
              } ; v = f.__construct__(a, x);

              return __break(); }); }, true));


        case ARRAY_INIT: v = [];
          c = n.children;
          i = 0;
          j = c.length; var __209 = false; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; if (__209) { i++; } else { __209 = true; } ; var __208 = (i < j); if (__208) { return (function __$execute(__then) { if (c[i]) {
                    return execute(c[i], x, __cb(_, __frame, 558, 36, function ___(__0, __87) {
                      v[i] = getValue(__87); __then(); }, true)); } else { __then(); } ; })(function __$execute() { while (__more) { __loop(); }; __more = true; }); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(function __$execute() { v.length = j;

            return __break(); });


        case OBJECT_INIT: v = {
          }; c = n.children;
          i = 0;
          j = c.length; var __212 = false; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; if (__212) { i++; } else { __212 = true; } ; var __211 = (i < j); if (__211) { t = c[i];
                return (function __$execute(__then) { if ((t.type === PROPERTY_INIT)) {
                    c2 = t.children;
                    return execute(c2[1], x, __cb(_, __frame, 570, 46, function ___(__0, __88) {
                      v[c2[0].value] = getValue(__88); __then(); }, true)); } else { f = newFunction(t, x);

                    u = (((t.type === GETTER)) ? "__defineGetter__" : "__defineSetter__");
                    v[u](t.name, thunk(f, x));

                    __then(); } ; })(function __$execute() { while (__more) { __loop(); }; __more = true; }); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(__break);




        case NULL: v = null;
          return __break();


        case THIS: v = x.thisObject;
          return __break();


        case TRUE: v = true;
          return __break();


        case FALSE: v = false;
          return __break();


        case IDENTIFIER: for (s = x.scope; s; s = s.parent) {
            if ((n.value in s.object)) {
              break;
            } ; }; v = new Reference((s && s.object), n.value, n);

          return __break();


        case NUMBER: 
        case STRING: 
        case REGEXP: v = n.value;
          return __break();


        case GROUP: return execute(n.children[0], x, __cb(_, __frame, 611, 16, function ___(__0, __89) {
            v = __89; return __break(); }, true)); default:


          return _(((("PANIC: unknown operation " + n.type) + ": ") + uneval(n)));
        }; })(function __$execute() {


        return _(null, v); }); }); };


  function Activation(f, a) {
    for (var i = 0, j = f.params.length; (i < j); i++) { definitions.defineProperty(this, f.params[i], a[i], true);; };

    definitions.defineProperty(this, "arguments", a, true); };






  Activation.prototype.__proto__ = null;
  delete Activation.prototype.constructor;

  function FunctionObject(node, scope) {
    this.node = node;
    this.scope = scope;
    definitions.defineProperty(this, "length", node.params.length, true, true, true);
    var proto = { };
    definitions.defineProperty(this, "prototype", proto, true);
    definitions.defineProperty(proto, "constructor", this, false, false, true); };


  function getPropertyDescriptor(obj, name) {
    while (obj) {
      if (({ }).hasOwnProperty.call(obj, name)) {
        return Object.getOwnPropertyDescriptor(obj, name) };
      obj = Object.getPrototypeOf(obj); }; };



  function getOwnProperties(obj) {
    var map = { };
    for (var name in Object.getOwnPropertyNames(obj)) { map[name] = Object.getOwnPropertyDescriptor(obj, name);; };

    return map; };



  function newFunction(n, x) {
    var fobj = new FunctionObject(n, x.scope);
    var handler = definitions.makePassthruHandler(fobj);
    var p = Proxy.createFunction(handler, function() {
      return fobj.__call__(this, arguments, x, asyncCallbackDummy);
    }, function() { return fobj.__construct__(arguments, x); });
    return p; };


  var FOp = FunctionObject.prototype = {


    __call__: function __call____2(t, a, x, _) { var x2, f, __this = this; var __frame = { name: "__call____2", line: 1050 }; return __func(_, this, arguments, __call____2, 3, __frame, function __$__call____2() {
        x2 = new ExecutionContext(FUNCTION_CODE);
        x2.thisObject = (t || global);
        x2.caller = x;
        x2.callee = __this;
        definitions.defineProperty(a, "callee", __this, false, false, true);
        f = __this.node;
        x2.scope = { object: new Activation(f, a), parent: __this.scope }; return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$__call____2() {


              return x2.execute(f.body, __cb(_, __frame, 10, 16, __then, true)); }); })(function ___(e, __result) { __catch(function __$__call____2() { if (e) {

                if ((e === RETURN)) {
                  return _(null, x2.result); }
                 else {
                  return _(e); } ; __then(); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, function __$__call____2() {


            return _(null, undefined); }); }); }); },


    __construct__: function(a, x) {
      var o = new Object;
      var p = this.prototype;
      if (isObject(p)) {
        o.__proto__ = p; };


      var v = this.__call__(o, a, x);
      if (isObject(v)) {
        return v };
      return o; },


    __hasInstance__: function(v) {
      if (isPrimitive(v)) {
        return false };
      var p = this.prototype;
      if (isPrimitive(p)) {
        throw new TypeError("'prototype' property is not an object", this.node.filename, this.node.lineno); } ;


      var o;
      while ((o = v.__proto__)) {
        if ((o === p)) {
          return true };
        v = o; };

      return false; },



    toString: function() {
      return this.node.getSource(); },


    apply: function(t, a) {

      if ((typeof this.__call__ !== "function")) {
        throw new TypeError(("Function.prototype.apply called on" + " uncallable object")); } ;



      if (((t === undefined) || (t === null))) {
        t = global; } else {
        if ((typeof t !== "object")) {
          t = toObject(t, t); } };

      if (((a === undefined) || (a === null))) {
        a = { };
        definitions.defineProperty(a, "length", 0, false, false, true); }
       else if ((a instanceof Array)) {
        var v = { };
        for (var i = 0, j = a.length; (i < j); i++) { definitions.defineProperty(v, i, a[i], false, false, true);; };

        definitions.defineProperty(v, "length", i, false, false, true);
        a = v; }
       else if (!((a instanceof Object))) {

        throw new TypeError(("Second argument to Function.prototype.apply" + " must be an array or arguments object"), this.node.filename, this.node.lineno); }   ;




      return this.__call__(t, a, ExecutionContext.current); },


    call: function(t) {

      var a = Array.prototype.splice.call(arguments, 1);
      return this.apply(t, a); } };




  reflectClass("Function", FOp);


  var Fp = Function.prototype;
  var REp = RegExp.prototype;

  if (!(("__call__" in Fp))) {
    definitions.defineProperty(Fp, "__call__", function __3(t, a, x, _) { var __this = this; var __frame = { name: "__3", line: 1153 }; return __func(_, this, arguments, __3, 3, __frame, function __$__3() {


        a = Array.prototype.splice.call(a, 0, a.length);
        return _(null, __this.apply(t, a)); });
    }, true, true, true);
    definitions.defineProperty(REp, "__call__", function(t, a, x) {

      a = Array.prototype.splice.call(a, 0, a.length);
      return this.exec.apply(this, a);
    }, true, true, true);
    definitions.defineProperty(Fp, "__construct__", function(a, x) {

      a = Array.prototype.splice.call(a, 0, a.length);
      switch (a.length) {
      case 0: return new this();
      case 1:
        return new this(a[0]);
      case 2:
        return new this(a[0], a[1]);
      case 3:
        return new this(a[0], a[1], a[2]);
        default:
        var argStr = "";
        for (var i = 0; (i < a.length); i++) {
          argStr += (("a[" + i) + "],");
        }; return eval((("new this(" + argStr.slice(0, -1)) + ");"));

      };

    }, true, true, true);




    definitions.defineProperty(Fp, "__hasInstance__", function(v) {

      return ((v instanceof Function) || (v instanceof global.Function));
    }, true, true, true); } ;


  function thunk(f, x) {
    console.log("TODO:thunk!!!");
    return function() { return f.__call__(this, arguments, x); }; };


  function evaluate(s, f, l, _) { var x; var __frame = { name: "evaluate", line: 1198 }; return __func(_, this, arguments, evaluate, 3, __frame, function __$evaluate() {
      if ((typeof s !== "string")) {
        return _(null, s); } ;

      x = new ExecutionContext(GLOBAL_CODE);
      return x.execute(parser.parse(s, f, l), __cb(_, __frame, 5, 8, function __$evaluate() {
        return _(null, x.result); }, true)); }); };


  function printStackTrace(stack) {
    var st = String(stack).split(/\n/);





    for (var i = 0; (i < st.length); i++) {
      var line = st[i].trim();
      if (line) {
        line = line.replace(/^(\(\))?@/, "<unknown>@");
        line = line.replace(/@(.*\/|\\)?([^\/\\]+:[0-9]+)/, " at $2");
        print(("    in " + line)); } ; }; };





  function repl() {


    function display(x) {
      if ((typeof x === "object")) {

        if (((x !== null) && ("toSource" in x))) {
          try {
            print(x.toSource());
          } catch (e) {  }; }

         else {
          print("null"); } ; }

       else if ((typeof x === "string")) {
        print(uneval(x)); }
       else if ((typeof x !== "undefined")) {

        print(String(x)); }   ; };




    function string(x) {
      try {
        return String(x);
      } catch (e) {
        return "unknown (can't convert to string)"; }; };



    var x = new ExecutionContext(GLOBAL_CODE);


    var ln = { value: 0 };

    ExecutionContext.current = x;
    for (; ; ) {
      x.result = undefined;
      putstr("njs> ");
      var src = readline();


      if ((src === null)) {
        print("");
        break; } ;

      ++ln.value;

      try {
        console.log("TODO:repl()!!!");
        execute(parser.parseStdin(src, ln), x);
        display(x.result);
      } catch (e) {
        if ((e === THROW)) {
          print(("uncaught exception: " + string(x.result))); }
         else if ((e === END)) {
          break; }
         else if ((e instanceof SyntaxError)) {
          const PREFIX = (((((e.filename || "stdin")) + ":") + e.lineNumber) + ": ");
          print((PREFIX + e.toString()));
          print((PREFIX + e.source));
          print(((PREFIX + ".".repeat(e.cursor)) + "^")); }
         else if ((e instanceof Error)) {
          print(((((((e.filename || "stdin")) + ":") + e.lineNumber) + ": ") + e.toString()));
          if (e.stack) {
            printStackTrace(e.stack); }; }
         else {
          print((("unexpected Narcissus exception (" + e) + ")"));
          throw e; }    ; }; };



    ExecutionContext.current = null; };


  function test(thunk) {
    try {
      return thunk();
    } catch (e) {
      print(((((((e.fileName + ":") + e.lineNumber) + ": ") + e.name) + ": ") + e.message));
      printStackTrace(e.stack); }; };



















  exports.async_execute_script = function(script, cb) {
    evaluate(script, "__string__", 0, (cb || function() {  })); };


})(((typeof exports !== "undefined") ? exports : (window.hypnotic = (window.hypnotic || {}))));