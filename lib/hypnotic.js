/*** Generated by streamline 0.10.1 (callbacks) - DO NOT EDIT ***/ var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename, false),__func=__rt.__func,__cb=__rt.__cb,__catch=__rt.__catch,__tryCatch=__rt.__tryCatch; (function() {
































































  if (window.Hypnotic) { return };
  function Hypnotic(fn) {
    this.fn = fn; };

  var exports = window.Hypnotic = Hypnotic;

  Hypnotic.prototype = {
    call: function(t, a, x, cb) {
      var args = [];
      args.push(cb);
      for (var i = 0, l = a.length; (i < l); ++i) { args.push(a[i]);; };

      return this.fn.apply(t, args); } };



  var parser = Narcissus.parser;
  var options = Narcissus.options;
  var definitions = Narcissus.definitions;
  var resolver = Narcissus.resolver;
  var hostGlobal = window;
  var bytecode = Narcissus.bytecode;
  var decompiler = Narcissus.decompiler;


  eval(definitions.consts);

  const WeakMap = definitions.WeakMap;
  const StaticEnv = resolver.StaticEnv;
  const Def = resolver.Def;

  const applyNew = definitions.applyNew;

  const GLOBAL_CODE = 0, EVAL_CODE = 1, FUNCTION_CODE = 2, MODULE_CODE = 3;





  function InternalSignal() {  };

  InternalSignal.prototype = { toString: function() { return "[object InternalSignal]"; } };

  const RETURN_SIGNAL = new InternalSignal, BREAK_SIGNAL = new InternalSignal, CONTINUE_SIGNAL = new InternalSignal, EXIT_SIGNAL = new InternalSignal;




  function ExecutionContext(type, strict) {
    this.type = type;
    this.strict = !!strict; };


  function isStackOverflow(e) {
    var re = /InternalError: (script stack space quota is exhausted|too much recursion)/;
    return re.test(e.toString()); };



  var globalBase = {

    NaN: NaN, Infinity: Infinity, undefined: undefined,


    eval: function eval(s) {
      if ((typeof s !== "string")) {
        return s };

      var x = ExecutionContext.current;
      var x2 = new ExecutionContext(EVAL_CODE);
      x2.thisObject = x.thisObject;
      x2.thisModule = x.thisModule;
      x2.functionInstance = x.functionInstance;
      x2.scope = (x.strict ? { object: new Object, parent: x.scope } : x.scope);
      var ast = parser.parse(s);
      if (ast.hasModules) {
        resolver.resolve(ast, new StaticEnv(x.staticEnv));
        instantiateModules(ast, x2.scope); } ;

      console.log("TODO:eval()");
      x2.execute(ast);
      return x2.result; },




    Function: function Function(dummy) {
      var p = "", b = "", n = arguments.length;
      if (n) {
        var m = (n - 1);
        if (m) {
          p += arguments[0];
          for (var k = 1; (k < m); k++) { p += ("," + arguments[k]);; }; } ;


        b += arguments[m]; } ;







      var f = parser.parseFunction((((("anonymous(" + p) + ") {") + b) + "}"), false, parser.STATEMENT_FORM);

      var s = { object: global, parent: null };
      return newFunction(f, { scope: s }); },

    Array: function(dummy) {

      return Array.apply(this, arguments); },

    String: function String(s) {

      s = (arguments.length ? ("" + s) : "");
      if ((this instanceof String)) {


        this.value = s;
        return this; } ;

      return s; },



    RegExp: RegExp,


    load: function load(s) {
      if ((typeof s !== "string")) {
        return s };

      evaluate(snarf(s), s, 1); },

    dis: function dis(f) {
      if ((typeof f !== "function")) {
        throw new TypeError((f + " is not a function")) };
      var fint = functionInternals.get(f);
      if (!fint) {
        throw new TypeError("only works on scripts") };
      return fint.getBytecode().toString(); },

    quit: function() { throw EXIT_SIGNAL; },
    assertEq: function() {
      return assertEq.apply(null, arguments); },




    sleep: new Hypnotic(function(cb, ms) {
      setTimeout(cb, ms); }) };



  function wrapNative(name, val) {
    if (!definitions.isNativeCode(val)) {
      return val };
    return Proxy.createFunction(definitions.makePassthruHandler(val), function() {

      return val.apply(hostGlobal, arguments);
    }, function() { return applyNew(val, arguments); }); };


  var hostHandler = definitions.blacklistHandler(hostGlobal, options.hiddenHostGlobals);
  var hostHandlerGet = hostHandler.get;
  hostHandler.get = function(receiver, name) {
    return wrapNative(name, hostHandlerGet(receiver, name)); };

  var hostProxy = Proxy.create(hostHandler);

  var globalStaticEnv;
  var moduleInstances = new WeakMap();
  var global = Object.create(hostProxy, { });

  function resetEnvironment() {
    ExecutionContext.current = new ExecutionContext(GLOBAL_CODE);
    var names = Object.getOwnPropertyNames(global);
    for (var i = 0, n = names.length; (i < n); i++) {
      delete global[names[i]]; };

    moduleInstances = new WeakMap();
    globalStaticEnv = new StaticEnv();

    var names = Object.getOwnPropertyNames(hostProxy);
    for (var i = 0, n = names.length; (i < n); i++) {
      globalStaticEnv.bind(names[i], new Def()); };

    for (var key in globalBase) {
      var val = globalBase[key];
      global[key] = val;

      globalStaticEnv.bind(key, new Def()); }; };


  resetEnvironment();


  function hasDirectProperty(o, p) {
    return Object.prototype.hasOwnProperty.call(o, p); };



  function reflectClass(name, proto) {
    var gctor = global[name];
    definitions.defineProperty(gctor, "prototype", proto, true, true, true);
    definitions.defineProperty(proto, "constructor", gctor, false, false, true);
    return proto; };



  reflectClass("Array", new Array);


  var gSp = reflectClass("String", new String);
  gSp.toSource = function() { return this.value.toSource(); };
  gSp.toString = function() { return this.value; };
  gSp.valueOf = function() { return this.value; };
  global.String.fromCharCode = String.fromCharCode;

  ExecutionContext.current = null;

  ExecutionContext.prototype = {
    scope: { object: global, parent: null },
    thisObject: global,
    thisModule: null,
    functionInstance: null,
    result: undefined,
    target: null,


    execute: function execute__1(n, _) { var prev, __this = this; var __frame = { name: "execute__1", line: 296 }; return __func(_, this, arguments, execute__1, 1, __frame, function __$execute__1() {
        prev = ExecutionContext.current;
        ExecutionContext.current = __this; return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute__1() {

              return execute(n, __this, __cb(_, __frame, 4, 12, function __$execute__1() { _(null, null, true); }, true)); }); })(function ___(__e, __r, __cont) { (function ___(__then) { __tryCatch(_, function __$execute__1() {

                ExecutionContext.current = prev; __then(); }); })(function ___() { __tryCatch(_, function ___() { if (__cont) { __then(); } else { _(__e, __r); }; }); }); }); })(function ___() { __tryCatch(_, _); }); }); },



    newFunction: function(n) {
      return newFunction(n, this); } };



  function Reference(base, propertyName, node) {
    this.base = base;
    this.propertyName = propertyName;
    this.node = node; };


  Reference.prototype.toString = function() {
    return decompiler.pp(this.node); };


  function getValue(v) {
    if ((v instanceof Reference)) {
      if (!v.base) {

        if (exports.getValueHook) {
          return exports.getValueHook(v.propertyName) };
        throw new ReferenceError((v.propertyName + " is not defined"), v.node.filename, v.node.lineno); } ;


      return v.base[v.propertyName]; } ;

    return v; };


  function putValue(v, w, vn) {
    if ((v instanceof Reference)) {
      return ((v.base || global))[v.propertyName] = w };
    throw new ReferenceError("Invalid assignment left-hand side", vn.filename, vn.lineno); };



  function isPrimitive(v) {
    var t = typeof v;
    return (((t === "object")) ? (v === null) : (t !== "function")); };


  function isObject(v) {
    var t = typeof v;
    return (((t === "object")) ? (v !== null) : (t === "function")); };




  function toObject(v, r, rn) {
    switch (typeof v) {
    case "boolean": return new global.Boolean(v);
    case "number":
      return new global.Number(v);
    case "string":
      return new global.String(v);
    case "function":
      return v;
    case "object":
      if ((v !== null)) {
        return v
      }; };

    var message = (((r + " (type ") + (typeof v)) + ") has no properties");
    throw (rn ? new TypeError(message, rn.filename, rn.lineno) : new TypeError(message)); };




  function reifyModule(mod) {
    return mod.instance.proxy; };


  function bindImports(impDecls, x) {
    for (var i = 0; (i < impDecls.length); i++) {
      var list = impDecls[i].pathList;
      for (var j = 0; (j < list.length); j++) {
        bindImport(list[j], x); }; }; };




  function bindImport(decl, x) {
    var t = x.scope.object;
    var lhs = decl.children[0];
    var rhs = decl.children[1];
    var mod = lhs.denotedModule;

    function bind(importID, exportID) {
      definitions.defineGetter(t, importID, function() {
        var m = reifyModule(mod);
        return m[exportID];
      }, true); };


    if ((rhs.type === IDENTIFIER)) {
      if ((rhs.value === "*")) {
        mod.exports.forEach(function(exportID, exp) {
          if (!mod.exportedModules.has(exportID)) {
            bind(exportID, exportID); }; }); }

       else {
        bind(rhs.value, rhs.value); } ;

      return; } ;


    for (var i = 0; (i < rhs.children.length); i++) {
      var pair = rhs.children[i];
      bind(pair.children[1].value, pair.children[0].value); }; };



  function executeModule(n, x) {
    var m = x.scope.object[n.name];
    var inst = moduleInstances.get(m);
    var x2 = new ExecutionContext(MODULE_CODE, true);
    x2.scope = inst.scope;
    x2.thisObject = m;
    x2.thisModule = m;
    console.log("TODO:executeModule()");
    x2.execute(n.body);
    return m; };


  function execute(n, x, _) { var a, c, f, i, j, r, s, t, u, v, defineVar, matchDefault, c2; var __frame = { name: "execute", line: 430 }; return __func(_, this, arguments, execute, 2, __frame, function __$execute() { return (function __$execute(__break) {


        switch (n.type) {
        case MODULE: if (n.body) {
            x.result = executeModule(n, x);
          } ; return __break();


        case IMPORT: 
        case EXPORT: return __break();


        case FUNCTION: return (function __$execute(__then) { if ((n.functionForm !== parser.DECLARED_FORM)) {
              return (function __$execute(__then) { if ((!n.name || (n.functionForm === parser.STATEMENT_FORM))) {
                  v = newFunction(n, x);
                  if ((n.functionForm === parser.STATEMENT_FORM)) {
                    definitions.defineProperty(x.scope.object, n.name, v, true);
                  } ; __then(); } else { t = new Object;

                  x.scope = {
                    object: t, parent: x.scope }; return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute() { v = newFunction(n, x);

                        definitions.defineProperty(t, n.name, v, true, true);
                        _(null, null, true); }); })(function ___(__e, __r, __cont) { (function ___(__then) { __tryCatch(_, function __$execute() { x.scope = x.scope.parent;

                          __then(); }); })(function ___() { __tryCatch(_, function ___() { if (__cont) { __then(); } else { _(__e, __r); }; }); }); }); })(function ___() { __tryCatch(_, __then); }); } ; })(__then); } else { __then(); } ; })(__break);





        case GENERATOR: u = new bytecode.Generator(x.functionInstance.getBytecode(), x);
          x.thisGenerator = u;
          x.result = u.userObject;
          return _(RETURN_SIGNAL);
        case SCRIPT:

          t = x.scope.object;
          n.modAssns.forEach(function(name, node) {
            definitions.defineMemoGetter(t, name, function() {
              return reifyModule(node.initializer.denotedModule);
            }, true);
          }); bindImports(n.impDecls, x);

          a = n.funDecls;
          for (i = 0, j = a.length; (i < j); i++) {
            s = a[i].name;
            f = newFunction(a[i], x);
            definitions.defineProperty(t, s, f, (x.type !== EVAL_CODE));

          }; a = n.varDecls;

          if (x.thisModule) {

            defineVar = function(obj, prop) {
              definitions.defineGetterSetter(obj, prop, function() {

                throw new ReferenceError((prop + " is not initialized"));
              }, function(val) {
                definitions.defineProperty(obj, prop, val, false);

                return val;
              }, false);
            }; } else {

            defineVar = function(obj, prop) {
              definitions.defineProperty(obj, prop, undefined, (x.type !== EVAL_CODE), false);

            }; } ; for (i = 0, j = a.length; (i < j); i++) {


            u = a[i];
            s = u.name;
            if ((u.readOnly && hasDirectProperty(t, s))) {
              return _(new TypeError(("Redeclaration of const " + s), u.filename, u.lineno));
            } ; if ((u.readOnly || !hasDirectProperty(t, s))) {


              defineVar(t, s);

            } ; }; c = n.children;


          i = 0;
          j = c.length; var __92 = false; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; if (__92) { i++; } else { __92 = true; } ; var __91 = (i < j); if (__91) { return execute(c[i], x, __cb(_, __frame, 86, 12, function __$execute() {
                  while (__more) { __loop(); }; __more = true; }, true)); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(__break);


        case BLOCK: c = n.children;
          i = 0;
          j = c.length; var __95 = false; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; if (__95) { i++; } else { __95 = true; } ; var __94 = (i < j); if (__94) { return execute(c[i], x, __cb(_, __frame, 92, 12, function __$execute() {
                  while (__more) { __loop(); }; __more = true; }, true)); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(__break);


        case IMPORT: 
        case EXPORT: return __break();


        case IF: return execute(n.condition, x, __cb(_, __frame, 100, 21, function ___(__0, __10) {
            var __9 = getValue(__10); return (function __$execute(__then) { if (__9) { return execute(n.thenPart, x, __cb(_, __frame, 101, 12, __then, true));
              } else { return (function __$execute(__then) { if (n.elsePart) {
                    return execute(n.elsePart, x, __cb(_, __frame, 103, 12, __then, true));
                  } else { __then(); } ; })(__then); } ; })(__break); }, true));


        case SWITCH: return execute(n.discriminant, x, __cb(_, __frame, 107, 21, function ___(__0, __11) {
            s = getValue(__11); a = n.cases;
            matchDefault = false;
            i = 0;

            j = a.length; var __102 = false; return (function ___(__break) { var __more, __more__switch_loop = { get: function() { return __more; }, set: function(v) { __more = v; } }; var __loop = __cb(_, __frame, 0, 0, function __$execute() { var __break__switch_loop = __break, __loop__switch_loop = __loop; __more = false; if (__102) { i++; } else { __102 = true; } ; var __101 = 1; if (__101) { if ((i === j)) {
                    if ((n.defaultIndex >= 0)) {
                      i = (n.defaultIndex - 1);
                      matchDefault = true;
                      while (__more) { __loop(); }; __more = true; return; } ; return __break(); } ; t = a[i];




                  return (function __$execute(__then) { if ((t.type === CASE)) {
                      return execute(t.caseLabel, x, __cb(_, __frame, 122, 29, function ___(__0, __12) {
                        u = getValue(__12); __then(); }, true)); } else { if (!matchDefault) {

                        while (__more) { __loop(); }; __more = true; return; } ; u = s;

                      __then(); } ; })(function __$execute() { return (function __$execute(__then) { if ((u === s)) {

                        return (function ___(__break) { var __more, __more__switch_loop = { get: function() { return __more; }, set: function(v) { __more = v; } }; var __loop = __cb(_, __frame, 0, 0, function __$execute() { var __break__switch_loop = __break, __loop__switch_loop = __loop; __more = false; var __104 = 1; if (__104) { return (function __$execute(__then) { if (t.statements.children.length) {

                                  return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute() { return execute(t.statements, x, __cb(_, __frame, 132, 28, __then, true));

                                      }); })(function ___(e, __result) { __catch(function __$execute() { if (e) { if (((e === BREAK_SIGNAL) && (x.target === n))) {

                                            return __break__switch_loop(); } else {

                                            return _(e);
                                          } ; __then(); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, __then); }); } else { __then(); } ; })(function __$execute() { if ((++i === j)) {



                                  return __break__switch_loop(); } ; t = a[i];

                                while (__more) { __loop(); }; __more = true; }); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(__then); } else { __then(); } ; })(function __$execute() { while (__more) { __loop(); }; __more = true; }); }); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(__break); }, true));






        case FOR: 
        case WHILE: return (function __$execute(__then) { if ((n.type === FOR)) {
              return (function __$execute(_) { var __1 = n.setup;
                if (!__1) { return _(null, __1); } ; return execute(n.setup, x, __cb(_, __frame, 153, 32, function ___(__0, __3) { var __2 = getValue(__3); return _(null, __2); }, true)); })(__cb(_, __frame, -429, 21, __then, true)); } else { __then(); } ; })(function __$execute() { return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; return (function __$execute(_) { return (function __$execute(_) { var __2 = !n.condition;


                    if (__2) { return _(null, __2); } ; return execute(n.condition, x, __cb(_, __frame, 156, 40, function ___(__0, __4) { var __3 = getValue(__4); return _(null, __3); }, true)); })(__cb(_, __frame, -429, 21, _, true)); })(__cb(_, __frame, -429, 21, function ___(__0, __107) { if (__107) { return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute() { return execute(n.body, x, __cb(_, __frame, 158, 16, __then, true));

                        }); })(function ___(e, __result) { __catch(function __$execute() { if (e) { if (((e === BREAK_SIGNAL) && (x.target === n))) {

                              return __break(); } else { if (((e === CONTINUE_SIGNAL) && (x.target === n))) {

                               } else {

                                return _(e);
                              } ; } ; __then(); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, function __$execute() { return (function __$execute(_) { var __2 = n.update;


                          if (!__2) { return _(null, __2); } ; return execute(n.update, x, __cb(_, __frame, 168, 33, function ___(__0, __4) { var __3 = getValue(__4); return _(null, __3); }, true)); })(__cb(_, __frame, -429, 21, function __$execute() { while (__more) { __loop(); }; __more = true; }, true)); }); }); } else { __break(); } ; }, true)); }); do { __loop(); } while (__more); __more = true; })(__break); });



        case FOR_IN: u = n.varDecl;
          return (function __$execute(__then) { if (u) {
              return execute(u, x, __cb(_, __frame, 175, 12, __then, true));
            } else { __then(); } ; })(function __$execute() { r = n.iterator;
            return execute(n.object, x, __cb(_, __frame, 177, 12, function ___(__0, __13) {
              s = __13; v = getValue(s);
              t = ((((v === null) || (v === undefined))) ? v : toObject(v, s, n.object));

              a = [];
              for (i in t) {
                a.push(i);
              }; i = 0;
              j = a.length; var __114 = false; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; if (__114) { i++; } else { __114 = true; } ; var __113 = (i < j); if (__113) { return execute(r, x, __cb(_, __frame, 185, 21, function ___(__0, __14) {
                      putValue(__14, a[i], r); return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute() { return execute(n.body, x, __cb(_, __frame, 187, 16, __then, true));

                          }); })(function ___(e, __result) { __catch(function __$execute() { if (e) { if (((e === BREAK_SIGNAL) && (x.target === n))) {

                                return __break(); } else { if (((e === CONTINUE_SIGNAL) && (x.target === n))) {

                                  while (__more) { __loop(); }; __more = true; return; } else {

                                  return _(e);
                                } ; } ; __then(); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, function __$execute() { while (__more) { __loop(); }; __more = true; }); }); }, true)); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(__break); }, true)); });





        case DO: var __3 = true; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; return (function __$execute(_) { return execute(n.condition, x, __cb(_, __frame, 213, 26, function ___(__0, __5) {












                  var __4 = (__3 || getValue(__5)); return _(null, __4); }, true)); })(__cb(_, __frame, -429, 21, function ___(__0, __117) { if (__117) { __3 = false; return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute() { return execute(n.body, x, __cb(_, __frame, 203, 16, __then, true)); }); })(function ___(e, __result) { __catch(function __$execute() { if (e) { if (((e === BREAK_SIGNAL) && (x.target === n))) { return __break(); } else { if (((e === CONTINUE_SIGNAL) && (x.target === n))) { while (__more) { __loop(); }; __more = true; return; } else { return _(e); } ; } ; __then(); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, function __$execute() { while (__more) { __loop(); }; __more = true; }); }); } else { __break(); } ; }, true)); }); do { __loop(); } while (__more); __more = true; })(__break);


        case BREAK: x.target = n.target;
          return _(BREAK_SIGNAL);
        case CONTINUE:

          x.target = n.target;
          return _(CONTINUE_SIGNAL);
        case TRY:

          return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute() { return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute() { return execute(n.tryBlock, x, __cb(_, __frame, 226, 12, __then, true));

                    }); })(function ___(e, __result) { __catch(function __$execute() { if (e) { return (function __$execute(__then) { if ((!((e instanceof InternalSignal)) && (j = n.catchClauses.length))) {

                            x.result = undefined;
                            i = 0;
                            var __122 = false; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; if (__122) { i++; } else { __122 = true; } ; var __121 = 1; if (__121) { if ((i === j)) {
                                    return _(e);
                                  } ; t = n.catchClauses[i];
                                  x.scope = {
                                    object: { }, parent: x.scope }; definitions.defineProperty(x.scope.object, t.varName, e, true);
                                  return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute() { return (function __$execute(_) { var __4 = t.guard;

                                          if (!__4) { return _(null, __4); } ; return execute(t.guard, x, __cb(_, __frame, 237, 49, function ___(__0, __6) { var __5 = !getValue(__6); return _(null, __5); }, true)); })(__cb(_, __frame, -429, 21, function ___(__0, __15) { return (function __$execute(__then) { if (__15) { while (__more) { __loop(); }; __more = true; return; } else { __then(); } ; })(function __$execute() { return execute(t.block, x, __cb(_, __frame, 239, 24, __break, true));

                                          }); }, true)); }); })(function ___(__e, __r, __cont) { (function ___(__then) { __tryCatch(_, function __$execute() { x.scope = x.scope.parent;


                                          __then(); }); })(function ___() { __tryCatch(_, function ___() { if (__cont) { __then(); } else { _(__e, __r); }; }); }); }); })(function ___() { __tryCatch(_, function __$execute() { while (__more) { __loop(); }; __more = true; }); }); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(__then); } else { return _(e);



                          } ; })(__then); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, function __$execute() { _(null, null, true); }); }); }); })(function ___(__e, __r, __cont) { (function ___(__then) { __tryCatch(_, function __$execute() { t = x.result;





                  return (function __$execute(__then) { if (n.finallyBlock) {
                      return execute(n.finallyBlock, x, __cb(_, __frame, 254, 16, __then, true));
                    } else { __then(); } ; })(function __$execute() { x.result = t;
                    __then(); }); }); })(function ___() { __tryCatch(_, function ___() { if (__cont) { __then(); } else { _(__e, __r); }; }); }); }); })(function ___() { __tryCatch(_, __break); });



        case THROW: return execute(n.exception, x, __cb(_, __frame, 260, 23, function ___(__0, __17) {
            var __16 = getValue(__17); return _(__16); }, true));

        case RETURN: return (function __$execute(_) { var __5 = n.value;

            return (function __$execute(__then) { if (__5) { return execute(n.value, x, __cb(_, __frame, 264, 38, function ___(__0, __7) { var __6 = getValue(__7); return _(null, __6); }, true)); } else { __then(); } ; })(function __$execute() { return _(null, undefined); }); })(__cb(_, __frame, -429, 21, function ___(__0, __18) { x.result = __18; return _(RETURN_SIGNAL);
          }, true));

        case WITH: return execute(n.object, x, __cb(_, __frame, 268, 12, function ___(__0, __19) {
            r = __19; t = toObject(getValue(r), r, n.object);
            x.scope = {
              object: t, parent: x.scope }; return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute() { return execute(n.body, x, __cb(_, __frame, 272, 12, function __$execute() {

                    _(null, null, true); }, true)); }); })(function ___(__e, __r, __cont) { (function ___(__then) { __tryCatch(_, function __$execute() { x.scope = x.scope.parent;

                    __then(); }); })(function ___() { __tryCatch(_, function ___() { if (__cont) { __then(); } else { _(__e, __r); }; }); }); }); })(function ___() { __tryCatch(_, __break); }); }, true));



        case VAR: 
        case CONST: c = n.children;
          i = 0;
          j = c.length; var __131 = false; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; if (__131) { i++; } else { __131 = true; } ; var __130 = (i < j); if (__130) { u = c[i].initializer;
                if (!u) {
                  while (__more) { __loop(); }; __more = true; return; } ; t = c[i].name;

                for (s = x.scope; s; s = s.parent) {
                  if (hasDirectProperty(s.object, t)) {
                    break;
                  } ; }; return execute(u, x, __cb(_, __frame, 290, 25, function ___(__0, __20) {

                  u = getValue(__20); if ((n.type === CONST)) {
                    definitions.defineProperty(s.object, t, u, (x.type !== EVAL_CODE), true);
                  } else { s.object[t] = u;

                  } ; while (__more) { __loop(); }; __more = true; }, true)); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(__break);



        case DEBUGGER: return _(("NYI: " + definitions.tokens[n.type]));
        case SEMICOLON:

          return (function __$execute(__then) { if (n.expression) {
              return execute(n.expression, x, __cb(_, __frame, 303, 32, function ___(__0, __21) {
                x.result = getValue(__21); __then(); }, true)); } else { __then(); } ; })(__break);


        case LABEL: return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$execute() { return execute(n.statement, x, __cb(_, __frame, 308, 12, __then, true));

              }); })(function ___(e, __result) { __catch(function __$execute() { if (e) { if (((e === BREAK_SIGNAL) && (x.target === n.target))) {

                   } else {
                    return _(e);
                  } ; __then(); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, __break); });




        case COMMA: c = n.children;
          i = 0;
          j = c.length; var __136 = false; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; if (__136) { i++; } else { __136 = true; } ; var __135 = (i < j); if (__135) { return execute(c[i], x, __cb(_, __frame, 320, 25, function ___(__0, __22) {
                  v = getValue(__22); while (__more) { __loop(); }; __more = true; }, true)); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(__break);


        case ASSIGN: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 325, 12, function ___(__0, __23) {
            r = __23; t = n.assignOp;
            if (t) {
              u = getValue(r);
            } ; return execute(c[1], x, __cb(_, __frame, 329, 21, function ___(__0, __24) {
              v = getValue(__24); if (t) {
                switch (t) {
                case BITWISE_OR:
                  v = (u | v); break; case BITWISE_XOR: v = (u ^ v);
                  break; case BITWISE_AND: v = (u & v);
                  break; case LSH: v = (u << v);
                  break; case RSH: v = (u >> v);
                  break; case URSH: v = (u >>> v);
                  break; case PLUS: v = (u + v);
                  break; case MINUS: v = (u - v);
                  break; case MUL: v = (u * v);
                  break; case DIV: v = (u / v);
                  break; case MOD: v = (u % v);
                  break; }; } ; putValue(r, v, c[0]);


              return __break(); }, true)); }, true));


        case HOOK: c = n.children;
          return (function __$execute(_) { return execute(c[0], x, __cb(_, __frame, 350, 21, function ___(__0, __7) {
              var __6 = getValue(__7); var __8 = __6; return (function __$execute(__then) { if (__8) { return execute(c[1], x, __cb(_, __frame, 350, 53, function ___(__0, __10) { var __9 = getValue(__10); return _(null, __9); }, true)); } else { __then(); } ; })(function __$execute() { return execute(c[2], x, __cb(_, __frame, 351, 23, function ___(__0, __12) {
                  var __11 = getValue(__12); return _(null, __11); }, true)); }); }, true)); })(__cb(_, __frame, -429, 21, function ___(__0, __25) { v = __25; return __break(); }, true));


        case OR: c = n.children;
          return (function __$execute(_) { return execute(c[0], x, __cb(_, __frame, 356, 21, function ___(__0, __8) {
              var __7 = getValue(__8); var __9 = __7; return (function __$execute(__then) { if (__9) { var __10 = __7; return _(null, __10); } else { __then(); } ; })(function __$execute() { return execute(c[1], x, __cb(_, __frame, 356, 54, function ___(__0, __12) { var __11 = getValue(__12); return _(null, __11); }, true)); }); }, true)); })(__cb(_, __frame, -429, 21, function ___(__0, __26) { v = __26; return __break(); }, true));


        case AND: c = n.children;
          return (function __$execute(_) { return execute(c[0], x, __cb(_, __frame, 361, 21, function ___(__0, __9) {
              var __8 = getValue(__9); var __10 = !__8; return (function __$execute(__then) { if (__10) { var __11 = __8; return _(null, __11); } else { __then(); } ; })(function __$execute() { return execute(c[1], x, __cb(_, __frame, 361, 54, function ___(__0, __13) { var __12 = getValue(__13); return _(null, __12); }, true)); }); }, true)); })(__cb(_, __frame, -429, 21, function ___(__0, __27) { v = __27; return __break(); }, true));


        case BITWISE_OR: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 366, 21, function ___(__0, __28) {
            return execute(c[1], x, __cb(_, __frame, 366, 53, function ___(__0, __29) { v = (getValue(__28) | getValue(__29)); return __break(); }, true)); }, true));


        case BITWISE_XOR: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 371, 21, function ___(__0, __30) {
            return execute(c[1], x, __cb(_, __frame, 371, 53, function ___(__0, __31) { v = (getValue(__30) ^ getValue(__31)); return __break(); }, true)); }, true));


        case BITWISE_AND: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 376, 21, function ___(__0, __32) {
            return execute(c[1], x, __cb(_, __frame, 376, 53, function ___(__0, __33) { v = (getValue(__32) & getValue(__33)); return __break(); }, true)); }, true));


        case EQ: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 381, 21, function ___(__0, __34) {
            return execute(c[1], x, __cb(_, __frame, 381, 54, function ___(__0, __35) { v = (getValue(__34) == getValue(__35)); return __break(); }, true)); }, true));


        case NE: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 386, 21, function ___(__0, __36) {
            return execute(c[1], x, __cb(_, __frame, 386, 54, function ___(__0, __37) { v = (getValue(__36) != getValue(__37)); return __break(); }, true)); }, true));


        case STRICT_EQ: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 391, 21, function ___(__0, __38) {
            return execute(c[1], x, __cb(_, __frame, 391, 55, function ___(__0, __39) { v = (getValue(__38) === getValue(__39)); return __break(); }, true)); }, true));


        case STRICT_NE: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 396, 21, function ___(__0, __40) {
            return execute(c[1], x, __cb(_, __frame, 396, 55, function ___(__0, __41) { v = (getValue(__40) !== getValue(__41)); return __break(); }, true)); }, true));


        case LT: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 401, 21, function ___(__0, __42) {
            return execute(c[1], x, __cb(_, __frame, 401, 53, function ___(__0, __43) { v = (getValue(__42) < getValue(__43)); return __break(); }, true)); }, true));


        case LE: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 406, 21, function ___(__0, __44) {
            return execute(c[1], x, __cb(_, __frame, 406, 54, function ___(__0, __45) { v = (getValue(__44) <= getValue(__45)); return __break(); }, true)); }, true));


        case GE: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 411, 21, function ___(__0, __46) {
            return execute(c[1], x, __cb(_, __frame, 411, 54, function ___(__0, __47) { v = (getValue(__46) >= getValue(__47)); return __break(); }, true)); }, true));


        case GT: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 416, 21, function ___(__0, __48) {
            return execute(c[1], x, __cb(_, __frame, 416, 53, function ___(__0, __49) { v = (getValue(__48) > getValue(__49)); return __break(); }, true)); }, true));


        case IN: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 421, 21, function ___(__0, __50) {
            return execute(c[1], x, __cb(_, __frame, 421, 54, function ___(__0, __51) { v = (getValue(__50) in getValue(__51)); return __break(); }, true)); }, true));


        case INSTANCEOF: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 426, 21, function ___(__0, __52) {
            t = getValue(__52); return execute(c[1], x, __cb(_, __frame, 427, 21, function ___(__0, __53) {
              u = getValue(__53); if ((isObject(u) && functionInternals.has(u))) {
                v = hasInstance(u, t);
              } else { v = (((t instanceof u)) || (((u === Function) && (t instanceof global.Function))));




              } ; return __break(); }, true)); }, true));


        case LSH: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 439, 21, function ___(__0, __54) {
            return execute(c[1], x, __cb(_, __frame, 439, 54, function ___(__0, __55) { v = (getValue(__54) << getValue(__55)); return __break(); }, true)); }, true));


        case RSH: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 444, 21, function ___(__0, __56) {
            return execute(c[1], x, __cb(_, __frame, 444, 54, function ___(__0, __57) { v = (getValue(__56) >> getValue(__57)); return __break(); }, true)); }, true));


        case URSH: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 449, 21, function ___(__0, __58) {
            return execute(c[1], x, __cb(_, __frame, 449, 55, function ___(__0, __59) { v = (getValue(__58) >>> getValue(__59)); return __break(); }, true)); }, true));


        case PLUS: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 454, 21, function ___(__0, __60) {
            return execute(c[1], x, __cb(_, __frame, 454, 53, function ___(__0, __61) { v = (getValue(__60) + getValue(__61)); return __break(); }, true)); }, true));


        case MINUS: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 459, 21, function ___(__0, __62) {
            return execute(c[1], x, __cb(_, __frame, 459, 53, function ___(__0, __63) { v = (getValue(__62) - getValue(__63)); return __break(); }, true)); }, true));


        case MUL: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 464, 21, function ___(__0, __64) {
            return execute(c[1], x, __cb(_, __frame, 464, 53, function ___(__0, __65) { v = (getValue(__64) * getValue(__65)); return __break(); }, true)); }, true));


        case DIV: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 469, 21, function ___(__0, __66) {
            return execute(c[1], x, __cb(_, __frame, 469, 53, function ___(__0, __67) { v = (getValue(__66) / getValue(__67)); return __break(); }, true)); }, true));


        case MOD: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 474, 21, function ___(__0, __68) {
            return execute(c[1], x, __cb(_, __frame, 474, 53, function ___(__0, __69) { v = (getValue(__68) % getValue(__69)); return __break(); }, true)); }, true));


        case DELETE: return execute(n.children[0], x, __cb(_, __frame, 478, 12, function ___(__0, __70) {
            t = __70; v = (!((t instanceof Reference)) || delete t.base[t.propertyName]);
            return __break(); }, true));


        case VOID: return execute(n.children[0], x, __cb(_, __frame, 483, 17, function ___(__0, __71) {
            getValue(__71); return __break(); }, true));


        case TYPEOF: return execute(n.children[0], x, __cb(_, __frame, 487, 12, function ___(__0, __72) {
            t = __72; if ((t instanceof Reference)) {
              t = (t.base ? t.base[t.propertyName] : undefined);
            } ; v = typeof t;
            return __break(); }, true));


        case NOT: return execute(n.children[0], x, __cb(_, __frame, 494, 22, function ___(__0, __73) {
            v = !getValue(__73); return __break(); }, true));


        case BITWISE_NOT: return execute(n.children[0], x, __cb(_, __frame, 498, 22, function ___(__0, __74) {
            v = ~getValue(__74); return __break(); }, true));


        case UNARY_PLUS: return execute(n.children[0], x, __cb(_, __frame, 502, 22, function ___(__0, __75) {
            v = +getValue(__75); return __break(); }, true));


        case UNARY_MINUS: return execute(n.children[0], x, __cb(_, __frame, 506, 22, function ___(__0, __76) {
            v = -getValue(__76); return __break(); }, true));


        case INCREMENT: 
        case DECREMENT: return execute(n.children[0], x, __cb(_, __frame, 511, 12, function ___(__0, __77) {
            t = __77; u = Number(getValue(t));
            if (n.postfix) {
              v = u;
            } ; putValue(t, (((n.type === INCREMENT)) ? ++u : --u), n.children[0]);
            if (!n.postfix) {
              v = u;
            } ; return __break(); }, true));


        case DOT: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 522, 12, function ___(__0, __78) {
            r = __78; t = getValue(r);
            u = c[1].value;
            v = new Reference(toObject(t, r, c[0]), u, n);
            return __break(); }, true));


        case INDEX: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 530, 12, function ___(__0, __79) {
            r = __79; t = getValue(r);
            return execute(c[1], x, __cb(_, __frame, 532, 21, function ___(__0, __80) {
              u = getValue(__80); v = new Reference(toObject(t, r, c[0]), String(u), n);
              return __break(); }, true)); }, true));


        case LIST: v = {

          }; c = n.children;
          i = 0;
          j = c.length; var __197 = false; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; if (__197) { i++; } else { __197 = true; } ; var __196 = (i < j); if (__196) { return execute(c[i], x, __cb(_, __frame, 541, 25, function ___(__0, __81) {
                  u = getValue(__81); definitions.defineProperty(v, i, u, false, false, true);
                  while (__more) { __loop(); }; __more = true; }, true)); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(function __$execute() { definitions.defineProperty(v, "length", i, false, false, true);

            return __break(); });


        case CALL: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 549, 12, function ___(__0, __82) {
            r = __82; return execute(c[1], x, __cb(_, __frame, 550, 12, function ___(__0, __83) {
              a = __83; f = getValue(r);
              x.staticEnv = n.staticEnv;
              if (((typeof f !== "function") && !((f instanceof Hypnotic)))) {
                return _(new TypeError((r + " is not callable"), c[0].filename, c[0].lineno));
              } ; t = (((r instanceof Reference)) ? r.base : null);

              if ((t instanceof Activation)) {
                t = null;
              } ; return (function __$execute(__then) { if ((f instanceof Hypnotic)) {
                  return f.call(t, a, x, __cb(_, __frame, 560, 16, function ___(__0, __84) {
                    v = __84; __then(); }, true)); } else { return call(f, t, a, x, __cb(_, __frame, 562, 16, function ___(__0, __85) {

                    v = __85; __then(); }, true)); } ; })(__break); }, true)); }, true));


        case NEW: 
        case NEW_WITH_ARGS: c = n.children;
          return execute(c[0], x, __cb(_, __frame, 568, 12, function ___(__0, __86) {
            r = __86; f = getValue(r);
            return (function __$execute(__then) { if ((n.type === NEW)) {
                a = {
                }; definitions.defineProperty(a, "length", 0, false, false, true);
                __then(); } else { return execute(c[1], x, __cb(_, __frame, 574, 16, function ___(__0, __87) {

                  a = __87; __then(); }, true)); } ; })(function __$execute() { if ((typeof f !== "function")) {

                return _(new TypeError((r + " is not a constructor"), c[0].filename, c[0].lineno));
              } ; return construct(f, a, x, __cb(_, __frame, 579, 12, function ___(__0, __88) {

                v = __88; return __break(); }, true)); }); }, true));


        case ARRAY_INIT: v = [];
          c = n.children;
          i = 0;
          j = c.length; var __207 = false; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; if (__207) { i++; } else { __207 = true; } ; var __206 = (i < j); if (__206) { return (function __$execute(__then) { if (c[i]) {
                    return execute(c[i], x, __cb(_, __frame, 587, 32, function ___(__0, __89) {
                      v[i] = getValue(__89); __then(); }, true)); } else { __then(); } ; })(function __$execute() { while (__more) { __loop(); }; __more = true; }); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(function __$execute() { v.length = j;

            return __break(); });


        case OBJECT_INIT: v = {
          }; c = n.children;
          i = 0;
          j = c.length; var __210 = false; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$execute() { __more = false; if (__210) { i++; } else { __210 = true; } ; var __209 = (i < j); if (__209) { t = c[i];
                return (function __$execute(__then) { if ((t.type === PROPERTY_INIT)) {
                    c2 = t.children;
                    return execute(c2[1], x, __cb(_, __frame, 599, 42, function ___(__0, __90) {
                      v[c2[0].value] = getValue(__90); __then(); }, true)); } else { f = newFunction(t, x);

                    u = (((t.type === GETTER)) ? "__defineGetter__" : "__defineSetter__");
                    v[u](t.name, thunk(f, x));

                    __then(); } ; })(function __$execute() { while (__more) { __loop(); }; __more = true; }); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(__break);




        case NULL: v = null;
          return __break();


        case THIS: v = x.thisObject;
          return __break();


        case TRUE: v = true;
          return __break();


        case FALSE: v = false;
          return __break();


        case IDENTIFIER: for (s = x.scope; s; s = s.parent) {
            if ((n.value in s.object)) {
              break;
            } ; }; v = new Reference((s && s.object), n.value, n);

          return __break();


        case NUMBER: 
        case STRING: 
        case REGEXP: v = n.value;
          return __break();


        case GROUP: v = execute(n.children[0], x);
          return __break(); default:


          return _(((("PANIC: unknown operation " + n.type) + ": ") + uneval(n)));
        }; })(function __$execute() {


        return _(null, v); }); }); };


  function Activation(f, a) {
    for (var i = 0, j = f.params.length; (i < j); i++) { definitions.defineProperty(this, f.params[i], a[i], true);; };

    definitions.defineProperty(this, "arguments", a, true); };






  Activation.prototype = Object.create(null);

  function FunctionInternals(node, scope) {
    this.node = node;
    this.scope = scope;
    this.length = node.params.length; };







  function ModuleInstance(mod, scope) {
    this.module = mod;
    this.scope = scope; };







  function newModule(mod, scope) {
    var exports = mod.exports;


    mod.instance = new ModuleInstance(mod, { object: new Object, parent: scope });

    function keys() {
      var result = [];
      exports.forEach(function(name, exp) {
        result.push(name); });

      return result; };


    function getExportDescriptor(name) {
      if (exports.has(name)) {
        var exp = exports.get(name);
        var inst = exp.resolved.module.instance;

        return {
          value: inst.scope.object[exp.resolved.internalID],
          writable: false,
          enumerable: true,
          configurable: true }; } ;



      throw new ReferenceError(("no such export: " + name)); };


    function getExportValue(receiver, name) {
      return getExportDescriptor(name).value; };


    function hasExport(name) {
      return exports.has(name); };


    function refuse() {  };


    var instObj = Proxy.create({
      getOwnPropertyDescriptor: getExportDescriptor,
      getPropertyDescriptor: getExportDescriptor,
      getOwnPropertyNames: keys,
      defineProperty: refuse,
      delete: refuse,
      fix: refuse,
      has: hasExport,
      hasOwn: hasExport,
      get: getExportValue,
      set: refuse,
      enumerate: keys,
      keys: keys });



    moduleInstances.set(instObj, mod.instance);
    mod.instance.proxy = instObj;

    return instObj; };


  function instantiateModules(n, scope) {
    n.modDefns.forEach(function(name, defn) {
      var m = defn.module;
      var instObj = newModule(m, scope);
      var inst = moduleInstances.get(instObj);
      definitions.defineProperty(scope.object, name, instObj, true, true);
      instantiateModules(m.node.body, inst.scope); }); };



  function getPropertyDescriptor(obj, name) {
    while (obj) {
      if (({ }).hasOwnProperty.call(obj, name)) {
        return Object.getOwnPropertyDescriptor(obj, name) };
      obj = Object.getPrototypeOf(obj); }; };



  function getOwnProperties(obj) {
    var map = { };
    for (var name in Object.getOwnPropertyNames(obj)) { map[name] = Object.getOwnPropertyDescriptor(obj, name);; };

    return map; };



  function newFunction(n, x) {
    var fint = new FunctionInternals(n, x.scope);
    var props = Object.create(Fp);
    definitions.defineProperty(props, "length", fint.length, false, false, true);
    definitions.defineProperty(props, "toString", function() {
      return fint.toString();
    }, false, false, true);
    var handler = definitions.makePassthruHandler(props);
    var p = Proxy.createFunction(handler, function() {
      return fint.call(p, this, arguments, x, function() {  });
    }, function() { return fint.construct(p, arguments, x, function() {  }); });
    functionInternals.set(p, fint);
    var proto = { };
    definitions.defineProperty(p, "prototype", proto, true);
    definitions.defineProperty(proto, "constructor", p, false, false, true);
    return p; };


  const functionInternals = new WeakMap();

  function hasInstance(u, v) {
    if (isPrimitive(v)) {
      return false };
    var p = u.prototype;
    if (isPrimitive(p)) {
      throw new TypeError("'prototype' property is not an object", this.node.filename, this.node.lineno); } ;


    var o;
    while ((o = Object.getPrototypeOf(v))) {
      if ((o === p)) {
        return true };
      v = o; };

    return false; };


  function call(f, t, a, x, _) { var fint; var __frame = { name: "call", line: 1239 }; return __func(_, this, arguments, call, 4, __frame, function __$call() {
      fint = functionInternals.get(f);
      if (!fint) {
        return _(null, f.apply(t, a)); } ;
      return fint.call(f, t, a, x, __cb(_, __frame, 4, 11, _, true)); }); };


  function construct(f, a, x, _) { var fint; var __frame = { name: "construct", line: 1246 }; return __func(_, this, arguments, construct, 3, __frame, function __$construct() {
      fint = functionInternals.get(f);
      if (!fint) {
        return _(null, applyNew(f, a)); } ;
      return fint.construct(f, a, x, __cb(_, __frame, 4, 11, _, true)); }); };


  var FIp = FunctionInternals.prototype = {
    call: function call__2(f, t, a, x, _) { var x2, n, __this = this; var __frame = { name: "call__2", line: 1254 }; return __func(_, this, arguments, call__2, 4, __frame, function __$call__2() {
        x2 = new ExecutionContext(FUNCTION_CODE, __this.node.body.strict);
        x2.thisObject = (t || global);
        x2.thisModule = null;
        x2.functionInstance = __this;
        definitions.defineProperty(a, "callee", f, false, false, true);
        n = __this.node;
        x2.scope = { object: new Activation(n, a), parent: __this.scope }; return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$call__2() {

              return x2.execute(n.body, __cb(_, __frame, 9, 12, __then, true)); }); })(function ___(e, __result) { __catch(function __$call__2() { if (e) {

                if ((e === RETURN_SIGNAL)) {
                  return _(null, x2.result); }
                 else {
                  return _(e); } ; __then(); } else { _(null, __result); } ; }); }); })(function ___() { __tryCatch(_, function __$call__2() {


            return _(null, undefined); }); }); }); },


    construct: function construct__3(f, a, x, _) { var p, o, v, __this = this; var __frame = { name: "construct__3", line: 1274 }; return __func(_, this, arguments, construct__3, 3, __frame, function __$construct__3() {
        p = __this.prototype;
        o = (isObject(p) ? Object.create(p) : new Object);

        return __this.call(f, o, a, x, __cb(_, __frame, 4, 16, function ___(__0, __1) { v = __1;
          if (isObject(v)) {
            return _(null, v); } ;
          return _(null, o); }, true)); }); },


    getBytecode: function() {
      var n = this.node;
      if (!n.proc) {
        n.proc = bytecode.compile(((n.body.type === GENERATOR) ? n.body : n)); };
      return n.proc; },


    toString: function() {
      var parenthesized = this.node.parenthesized;
      this.node.parenthesized = false;
      var result = decompiler.pp(this.node);
      this.node.parenthesized = parenthesized;
      return result; } };




  var Fp = new Function;
  reflectClass("Function", Fp);

  function thunk(f, x) {
    console.log("TODO:thunk()");
    return function() { return functionInternals.get(f).call(f, this, arguments, x); }; };


  function resolveGlobal(ast) {

    var extendedStaticEnv = globalStaticEnv.copy();
    resolver.resolve(ast, extendedStaticEnv);

    globalStaticEnv = extendedStaticEnv; };


  function evaluate(s, f, l, _) { var x, ast; var __frame = { name: "evaluate", line: 1317 }; return __func(_, this, arguments, evaluate, 3, __frame, function __$evaluate() {
      if ((typeof s !== "string")) {
        return _(null, s); } ;

      x = new ExecutionContext(GLOBAL_CODE);
      ast = parser.parse(s, f, l);
      if (options.desugarExtensions) {
        ast = desugaring.desugar(ast); } ;
      if (ast.hasModules) {
        resolveGlobal(ast);
        instantiateModules(ast, x.scope); } ;

      return x.execute(ast, __cb(_, __frame, 12, 4, function __$evaluate() {
        return _(null, x.result); }, true)); }); };


  function printStackTrace(stack) {
    var st = String(stack).split(/\n/);





    for (var i = 0; (i < st.length); i++) {
      var line = st[i].trim();
      if (line) {
        line = line.replace(/^(\(\))?@/, "<unknown>@");
        line = line.replace(/@(.*\/|\\)?([^\/\\]+:[0-9]+)/, " at $2");
        print(("    in " + line)); } ; }; };





  const CANCEL_SIGNAL = new InternalSignal;


  function repl() {


    function display(x) {
      if ((typeof x === "object")) {

        if (((x !== null) && ("toSource" in x))) {
          try {
            print(x.toSource());
          } catch (e) {  }; }

         else {
          print("null"); } ; }

       else if ((typeof x === "string")) {
        print(uneval(x)); }
       else if ((typeof x !== "undefined")) {

        print(String(x)); }   ; };




    function string(x) {
      try {
        return String(x);
      } catch (e) {
        return "unknown (can't convert to string)"; }; };




    function isCommand(line) {
      switch (line.trim()) {
      case ".help": print(".begin  Begin multiline input mode.");
        print(".break  Sometimes you get stuck in a place you can't get out... This will get you out.");
        print(".clear  Break, and also clear the global environment.");
        print(".end    End multiline input mode.");
        print(".exit   Exit the prompt.");
        print(".help   Show repl options.");
        return true;
      case ".clear":

        resetEnvironment();
        throw CANCEL_SIGNAL;
      case ".break":

        throw CANCEL_SIGNAL;
      case ".exit":

        throw EXIT_SIGNAL;
      };

      return false; };


    var x = new ExecutionContext(GLOBAL_CODE);


    var ln = { value: 0 };

    ExecutionContext.current = x;
    for (; ; ) {
      x.result = undefined;
      putstr("njs> ");
      var src = readline();


      if ((src === null)) {
        print("");
        break; } ;

      ++ln.value;

      try {
        var ast = parser.parseStdin(src, ln, "...  ", isCommand);
        if (options.desugarExtensions) {
          ast = desugaring.desugar(ast); };
        if (ast.hasModules) {
          resolveGlobal(ast);
          instantiateModules(ast, x.scope); } ;

        execute(ast, x);
        display(x.result);
      } catch (e) {
        if ((e === EXIT_SIGNAL)) {
          break; }
         else if ((e === CANCEL_SIGNAL)) {
          continue; }
         else if ((e instanceof SyntaxError)) {
          const PREFIX = (((((e.filename || "stdin")) + ":") + e.lineNumber) + ": ");
          print((PREFIX + e.toString()));
          print((PREFIX + e.source));
          print(((PREFIX + ".".repeat(e.cursor)) + "^")); }
         else if ((e instanceof Error)) {
          print(((((((e.filename || "stdin")) + ":") + e.lineNumber) + ": ") + e.toString()));
          if (e.stack) {
            printStackTrace(e.stack); }; }
         else {
          print(("uncaught exception: " + string(e))); }    ; }; };



    ExecutionContext.current = null; };


  function test(thunk) {
    try {
      thunk();
    } catch (e) {
      print(((((((e.fileName + ":") + e.lineNumber) + ": ") + e.name) + ": ") + e.message));
      printStackTrace(e.stack);
      return false; };

    return true; };




  exports.global = global;
  exports.globalBase = globalBase;
  exports.resetEnvironment = resetEnvironment;
  exports.evaluate = evaluate;
  exports.getValueHook = null;
  exports.repl = repl;
  exports.test = test;

})();